/**
 * Copyright 2014 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Angular module for Rtcomm
 * @version v1.0.3 - 2016-04-20
 * @link https://github.com/WASdev/lib.angular-rtcomm
 * @author Brian Pulito <brian_pulito@us.ibm.com> (https://github.com/bpulito)
 */
!function(){angular.module("angular-rtcomm",["ui.bootstrap","treeControl","angular-rtcomm-ui","angular-rtcomm-presence","angular-rtcomm-service"])}(),function(){"use strict";angular.module("angular-rtcomm-service",[])}(),function(){angular.module("angular-rtcomm-ui",["ui.bootstrap","angular-rtcomm-service"])}(),function(){function a(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-presence.html",controller:["$scope","$rootScope",function(c,d){c.monitorTopics=[],c.presenceData=[],c.expandedNodes=[],c.protocolList={chat:!0,webrtc:!1},c.flatten=!1,c.treeOptions={nodeChildren:"nodes",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},c.init=function(a){c.protocolList.chat="boolean"==typeof a.chat?a.chat:c.protocolList.chat,c.protocolList.webrtc="boolean"==typeof a.webrtc?a.webrtc:c.protocolList.webrtc,c.flatten="boolean"==typeof a.flatten?a.flatten:c.flatten},c.onCallClick=function(e){var f=c.protocolList,g=[];for(var h in f)f[h]===!0&&g.push(h);b.debug(g),a.placeCall(e,g),d.$broadcast("rtcomm::presence-click")},c.$on("rtcomm::init",function(d,e,f){a.publishPresence();var g=a.getPresenceMonitor();g.on("updated",function(a){b.debug("<<------rtcommPresence: updated------>>"),c.flatten&&(b.debug("<<------rtcommPresence: updated using flattened data ------>>"),c.presenceData=a[0].flatten()),c.$apply()}),c.flatten||(c.presenceData=g.getPresenceData()),c.presenceData.length>=1&&c.expandedNodes.push(c.presenceData[0]);for(var h=0;h<c.monitorTopics.length;h++)b.debug("rtcommPresence: monitorTopic: "+c.monitorTopics[h]),g.add(c.monitorTopics[h])})}],controllerAs:"presence"}}angular.module("angular-rtcomm-presence",["ui.bootstrap","treeControl","angular-rtcomm-service"]).directive("rtcommPresence",a),a.$inject=["RtcommService","$log"]}(),function(){"use strict";function a(a,b,c){function d(a){p={server:"undefined"!=typeof a.server?a.server:p.server,port:"undefined"!=typeof a.port?a.port:p.port,rtcommTopicPath:"undefined"!=typeof a.rtcommTopicPath?a.rtcommTopicPath:p.rtcommTopicPath,createEndpoint:"undefined"!=typeof a.createEndpoint?a.createEndpoint:p.createEndpoint,appContext:"undefined"!=typeof a.appContext?a.appContext:p.appContext,presence:{topic:"undefined"!=typeof a.presenceTopic?a.presenceTopic:p.presence.topic},userid:"undefined"!=typeof a.userid?a.userid:p.userid},q={autoEnable:"undefined"!=typeof a.autoEnable?a.autoEnable:q.autoEnable,chat:"undefined"!=typeof a.chat?a.chat:q.chat,webrtc:"undefined"!=typeof a.webrtc?a.webrtc:q.webrtc,webrtcConfig:{broadcast:{video:"undefined"!=typeof a.broadcastVideo?a.broadcastVideo:q.webrtcConfig.broadcast.video,audio:"undefined"!=typeof a.broadcastAudio?a.broadcastAudio:q.webrtcConfig.broadcast.audio},trickleICE:"undefined"!=typeof a.trickleICE?a.trickleICE:q.webrtcConfig.trickleICE},ringbacktone:"undefined"!=typeof a.ringbacktone?a.ringbacktone:q.ringbacktone,ringtone:"undefined"!=typeof a.ringtone?a.ringtone:q.ringtone},r="undefined"!=typeof a.rtcommDebug?a.rtcommDebug:r,b.debug("rtcommDebug from config is: "+a.rtcommDebug),b.debug("providerConfig is: "+p)}function e(){return p}function f(){return q.webrtc}function g(){return q.chat}function h(){return q.webrtcConfig.broadcast.audio}function i(){return q.webrtcConfig.broadcast.video}function j(){return q.ringtone}function k(){return q.ringbacktone}function l(){return r}function m(){return c.location!==c.parent.location}function n(){return q}var o={setProviderConfig:d,getProviderConfig:e,getWebRTCEnabled:f,getChatEnabled:g,getBroadcastAudio:h,getBroadcastVideo:i,getRingTone:j,getRingBackTone:k,getRtcommDebug:l,isRtcommDisabled:m,getMediaConfig:n},p={server:a.host(),port:a.port(),rtcommTopicPath:"/rtcomm/",createEndpoint:!1,appContext:"default",userid:"",presence:{topic:""}},q={autoEnable:!1,chat:!0,webrtc:!0,webrtcConfig:{broadcast:{audio:!0,video:!0},trickleICE:!0},ringbacktone:null,ringtone:null},r="DEBUG";return b.debug("RtcommConfigService: Abs Url: "+a.absUrl()),b.debug("providerConfig.server: "+p.server),b.debug("providerConfig.port: "+p.port),o}angular.module("angular-rtcomm-service").factory("RtcommConfigService",a),a.$inject=["$location","$log","$window"]}(),function(){function a(a,b,c,d,e,f){function g(){function f(a){var b=a.endpoint.id,c=d.getSession(b);null===c&&(c=d.createSession(b)),c.state=a.eventName,h(a)}aa=new e.EndpointProvider,aa.setLogLevel(c.getRtcommDebug()),b.debug("rtcomm-service - endpointProvider log level is: "+aa.getLogLevel()),b.debug("rtcomm-service - endpointProvider log level should be: "+c.getRtcommDebug()),aa.setAppContext(c.getProviderConfig().appContext),aa.on("reset",function(a){p({type:"danger",msg:a.reason})}),aa.on("queueupdate",function(c){b.debug("<<------rtcomm-service------>> - Event: queueupdate"),b.debug("queueupdate",c),a.$evalAsync(function(){a.$broadcast("queueupdate",c)})}),aa.on("newendpoint",function(c){b.debug("<<------rtcomm-service------>> - Event: newendpoint remoteEndpointID: "+c.getRemoteEndpointID()),a.$evalAsync(function(){a.$broadcast("newendpoint",c)})}),aa.setRtcommEndpointConfig({onetimemessage:function(c){if(b.debug("<<------- rtcomm-service ----->> - Event: "+c),"undefined"!==c.onetimemessage.type&&"iFrameURL"===c.onetimemessage.type){var e=c.endpoint.id,f=d.getSession(e);null===f&&(f=d.createSession(e)),f.iFrameURL=c.onetimemessage.iFrameURL,a.$evalAsync(function(){a.$broadcast("rtcomm::iframeUpdate",c.endpoint.id,c.onetimemessage.iFrameURL)})}},"session:started":function(a){b.debug("<<------rtcomm-service------>> - Event: "+a.eventName+" remoteEndpointID: "+a.endpoint.getRemoteEndpointID());var c=a.endpoint.id,e=a.endpoint,f=d.getSession(c);null===f?b.error("Session:started but a previous session hasn't been created!"):(n(c),f.started=!0,f.remoteEndpointID=e.getRemoteEndpointID(),h(a))},"session:connecting":f,"session:alerting":f,"session:trying":f,"session:ringing":f,"session:queued":f,"session:failed":function(a){i(a.endpoint.id),h(a)},"session:stopped":function(a){i(a.endpoint.id),h(a)},"webrtc:connected":function(a){var b=d.getSession(a.endpoint.id);null!==b&&(b.webrtcConnected=!0,h(a))},"webrtc:remotemuted":function(a){h(a)},"webrtc:disconnected":function(a){var b=d.getSession(a.endpoint.id);null!==b&&(b.webrtcConnected=!1),h(a)},"chat:connected":h,"chat:disconnected":h,"chat:message":function(a){var b={time:new Date,name:a.message.from,message:angular.copy(a.message.message)},c=d.getSession(a.endpoint.id);null!==c&&(c.chats.push(b),h(a))},destroyed:h})}function h(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){a.$broadcast(c.eventName,c)})}function i(b){d.removeSession(b);var c=m(b);"undefined"!=typeof c&&null!==c&&c.destroy();var e=d.getAllSessions();0===e.length?a.$broadcast("noEndpointActivated"):n(e[0].endpointUUID)}function j(){return null==Z&&(Z={state:"available",userDefines:[]}),Z}function k(d){b.debug("<<------rtcomm-service------>> - Event: Provider init succeeded"),null!=Z&&(b.debug("RtcommService: initSuccess: updating presence record"),aa.publishPresence(Z)),a.$evalAsync(function(){var b={ready:d.ready,registered:d.registered,endpoint:d.endpoint,userid:c.getProviderConfig().userid};a.$broadcast("rtcomm::init",!0,b)})}function l(c){b.debug("<<------rtcomm-service------>> - Event: Provider init failed: error: ",c),a.$evalAsync(function(){a.$broadcast("rtcomm::init",!1,c)})}function m(a){var c=null;return"undefined"==typeof a||null===a?(b.debug("getEndpoint: create new endpoint"),c=aa.createRtcommEndpoint()):(b.debug("getEndpoint: get an endpoint with id -> "+a),c=aa.getRtcommEndpoint(a)),c}function n(b){var c=o();if(null!==c&&c!==b){var e=d.getSession(c);null!==e&&(e.activated=!1)}var e=d.getSession(b);null===e&&(e=d.createSession(b)),e.activated=!0,a.$broadcast("endpointActivated",b)}function o(){for(var a=null,b=d.getAllSessions(),c=0;c<b.length;c++)if(b[c].activated===!0){a=b[c].endpointUUID;break}return a}function p(b){var c={type:"info",msg:"default message"};"string"==typeof b?c.msg=b:c=b,a.$evalAsync(function(){a.$broadcast("rtcomm::alert",c)})}function q(){return X}function r(a){return 1==c.isRtcommDisabled()?void b.debug("RtcommService:setConfig: isRtcommDisabled = true; return with no setup"):("INFO"!==a.rtcommDebug&&"DEBUG"!==a.rtcommDebug||aa.setLogLevel(a.rtcommDebug),b.debug("rtcomm-services: setConfig: config: ",a),c.setProviderConfig(a),aa.setRtcommEndpointConfig(c.getMediaConfig()),void(X===!1&&("undefined"!=typeof a.identityServlet&&null!=a.identityServlet?f.get(a.identityServlet).success(function(a){"undefined"!=typeof a.userid?(c.setProviderConfig(a),aa.init(c.getProviderConfig(),k,l),X=!0):b.error("RtcommService: setConfig promise: Invalid JSON object return from identityServlet: ",a)}).error(function(a,c,d,e){b.debug("RtcommService: setConfig promise: error accessing userid from identityServlet: "+c)}):"undefined"!=typeof a.userid&&""===c.getProviderConfig().userid||(aa.init(c.getProviderConfig(),k,l),X=!0))))}function s(a){return aa.getPresenceMonitor(a)}function t(){X===!0&&aa.publishPresence(j())}function u(a){for(var c=0;c<a.length;c++)j().userDefines.push(a[c]);X===!0&&(b.debug("RtcommService: addToPresenceRecord: updating presence record to: ",j()),aa.publishPresence(j()))}function v(a,c){for(var d=0;d<a.length;d++)for(var e=0;e<j().userDefines.length;e++)if(j().userDefines[e].name===a[d].name){j().userDefines.splice(e,1);break}X===!0&&c&&(b.debug("RtcommService: removeFromPresenceRecord: updating presence record to: ",j()),aa.publishPresence(j()))}function w(a){return j().state=a,aa.publishPresence(j())}function x(a){return m(a)}function y(a){aa.getRtcommEndpoint(a).destroy()}function z(a){X===!1?(c.getProviderConfig().userid=a,aa.init(c.getProviderConfig(),k,l),X=!0):b.error("rtcomm-services: register: ERROR: endpoint provider already initialized")}function A(){1==X?(aa.destroy(),X=!1,l("destroyed")):b.error("rtcomm-services: unregister: ERROR: endpoint provider not initialized")}function B(a){aa.joinQueue(a)}function C(a){aa.leaveQueue(a)}function D(){return Y}function E(a,b){var c;c=d.getSession(b),null===c&&(c=d.createSession(b)),c.chats.push(a),aa.getRtcommEndpoint(b).chat.send(a.message)}function F(a){if("undefined"!=typeof a&&null!=a){var b=d.getSession(a);return null!==b?b.chats:null}return null}function G(a){if("undefined"!=typeof a&&null!=a){var b=d.getSession(a);return null!=b?b.webrtcConnected:!1}return!1}function H(a){return"undefined"!=typeof a&&null!=a?aa.getRtcommEndpoint(a).getState():"session:stopped"}function I(a){"undefined"!=typeof a&&""!==a&&aa.setUserID(a)}function J(a){"undefined"!=typeof a&&""!==a&&(c.setProviderConfig({userid:a}),aa.init(c.getProviderConfig(),k,l))}function K(a){"undefined"!=typeof a&&""!==a&&(c.setProviderConfig({presenceTopic:a}),aa.init(c.getProviderConfig(),k,l))}function L(a){if("undefined"!=typeof a&&null!=a){var b=d.getSession(a);return null!=b?b.iFrameURL:null}return null}function M(a,c){b.debug("RtcommService: putIframeURL: endpointUUID: "+a+" newURL: "+c);var e=aa.getRtcommEndpoint(a);if(null!=e){var f=d.getSession(a);null===f&&(f=d.createSession(a)),f.iFrameURL=c;var g={type:"iFrameURL",iFrameURL:c};b.debug("RtcommService: putIframeURL: sending new iFrame URL"),e.sendOneTimeMessage(g)}}function N(a,b){var c=m();if(b.indexOf("chat")>-1&&c.chat.enable(),b.indexOf("webrtc")>-1){var d=!0;b.indexOf("disableTrickleICE")>-1&&(d=!1),c.webrtc.enable({trickleICE:d})}return n(c.id),c.connect(a),c.id}function O(){return d.getAllSessions()}function P(a){a.disconnect()}function Q(a){n(a)}function R(){return o()}function S(a){var b=null;if(null!=a){var c=d.getSession(a);null!=c&&(b=c.remoteEndpointID)}return b}function T(){$="selfView",_="remoteView"}function U(a,b){$=a,_=b}function V(a){b.debug("rtcommVideo: setting local media");var c=null;"undefined"!=typeof a&&null!==a?c=m(a):null!=o()&&(c=m(o())),null!=c&&(b.debug(c),c.webrtc.setLocalMedia({mediaOut:document.querySelector("#"+$),mediaIn:document.querySelector("#"+_)}))}var W={alert:p,isInitialized:q,setConfig:r,getPresenceMonitor:s,publishPresence:t,addToPresenceRecord:u,removeFromPresenceRecord:v,setPresenceRecordState:w,getEndpoint:x,destroyEndpoint:y,register:z,unregister:A,joinQueue:B,leaveQueue:C,getQueues:D,sendChatMessage:E,getChats:F,isWebrtcConnected:G,getSessionState:H,setAlias:I,setUserID:J,setPresenceTopic:K,getIframeURL:L,putIframeURL:M,placeCall:N,getSessions:O,endCall:P,setActiveEndpoint:Q,getActiveEndpoint:R,getRemoteEndpoint:S,setDefaultViewSelector:T,setViewSelector:U,setVideoView:V},X=!1,Y=null,Z=null,$="selfView",_="remoteView",aa=null;return g(),W}angular.module("angular-rtcomm-service").config(["$logProvider",function(a){a.debugEnabled(!0)}]).constant("rtcomm",rtcomm).factory("RtcommService",a),a.$inject=["$rootScope","$log","RtcommConfigService","RtcommSessions","rtcomm","$http"]}(),function(){"use strict";function a(a){function b(){return h}function c(b){a.debug("Retrieving session linked to EndpointUUID: "+b);var c=null;return h.forEach(function(a){a.endpointUUID===b&&(c=a)}),c}function d(b){a.debug("Creating a session for EndpointUUID: "+b);var c;return c={endpointUUID:b,remoteEndpointID:null,chats:[],webrtcConnected:!1,started:!1,state:"session:stopped",activated:!0,iFrameURL:"about:blank"},h.push(c),c}function e(b,d){a.debug("Updating session for EndpointUUID: "+b);var e=c(b);if("undefined"==typeof e)a.debug("Unable to update endpoint due to it not existing");else for(var f in e)e.hasOwnProperty(f)&&(e[f]="undefined"!=typeof d[f]?d[f]:e[f]);return e}function f(b){a.debug("Destroy session for EndpointUUID: "+b);for(var c,d=0;d<h.length;d++)if(c=h[d],c.endpointUUID===b){h.splice(d,1),a.debug("Session with endpointUUID === "+b+"has been removed");break}return null===c&&a.debug("Unable to destroy session due to it not existing"),c}var g={getAllSessions:b,createSession:d,getSession:c,updateSession:e,removeSession:f},h=[];return g}angular.module("angular-rtcomm-service").factory("RtcommSessions",a),a.$inject=["$log"]}(),function(){"use strict";function a(a,b,c,d){var e=this;e.extendedConfig=null,d.debug("RtcommConfigController: configURL = "+e.configURL),c.init=function(a,b){d.debug("RtcommConfigController: initing configURL = "+a),e.configURL=a,"undefined"!=typeof b&&(e.extendedConfig=b),e.getConfig()},e.getConfig=function(){b.get(e.configURL).success(function(b){null!=e.extendedConfig&&(angular.extend(b,e.extendedConfig),d.debug("RtcommConfigController: extended config object: "+b)),a.setConfig(b)}).error(function(a,b,c,e){d.debug("RtcommConfigController: error accessing config: "+b)})}}angular.module("angular-rtcomm-ui").controller("RtcommConfigController",a),a.$inject=["RtcommService","$http","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-alert.html",controller:b,controllerAs:"alertVM",bindToController:!0};return a}function b(a,b){var c=this;c.alerts=[],c.addAlert=function(a){c.alerts.push(a)},c.closeAlert=function(a){c.alerts.splice(a,1)},a.$on("rtcomm::alert",function(a,b){c.addAlert(b)})}angular.module("angular-rtcomm-ui").directive("rtcommAlert",a),b.$inject=["$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-queues.html",controller:b,controllerAs:"queuesVM",bindToController:!0};return a}function b(a,b,c){var d=this;d.rQueues=[],d.autoJoinQueues=!1,d.queuePresenceData=[],d.queuePublishPresence=!1,d.queueFilter=null,b.init=function(a,b,e){c.debug("rtcommQueues: autoJoinQueues = "+a),d.autoJoinQueues=a,d.queuePublishPresence=b,"undefined"!=typeof e&&(d.queueFilter=e)},d.filterOutQueue=function(a){var b=!0;if(null!=d.queueFilter)for(var c=0;c<d.queueFilter.length;++c){var e=d.queueFilter[c];if(e==a.endpointID){b=!1;break}}else b=!1;return b},d.onQueueClick=function(b){c.debug("rtcommQueues: onClick: TOP");for(var e=0;e<d.rQueues.length;e++)d.rQueues[e].endpointID===b.endpointID?(c.debug("rtcommQueues: onClick: queue.endpointID = "+b.endpointID),0==b.active?(a.joinQueue(b.endpointID),d.rQueues[e].active=!0):(a.leaveQueue(b.endpointID),d.rQueues[e].active=!1)):e==d.rQueues.length-1&&c.debug("rtcommQueues: ERROR: queue.endpointID: "+b.endpointID+" not found in list of queues");d.updateQueuePresence()},d.updateQueuePresence=function(){if(1==d.queuePublishPresence){a.removeFromPresenceRecord(d.queuePresenceData,!1),d.queuePresenceData=[];for(var b=0;b<d.rQueues.length;b++)d.rQueues[b].active===!0&&d.queuePresenceData.push({name:"queue",value:d.rQueues[b].endpointID});a.addToPresenceRecord(d.queuePresenceData)}},b.$on("queueupdate",function(a,b){c.debug("rtcommQueues: scope queues",d.rQueues),Object.keys(b).forEach(function(a){c.debug("rtcommQueues: Push queue: "+b[a]),c.debug("rtcommQueues: autoJoinQueues: "+d.autoJoinQueues),0==d.filterOutQueue(b[a])&&(d.rQueues.push(b[a]),1==d.autoJoinQueues&&d.onQueueClick(b[a]))}),d.updateQueuePresence()}),b.$on("rtcomm::init",function(a,b,e){0==b&&(c.debug("rtcommQueues: init: clear queues"),d.rQueues=[])})}angular.module("angular-rtcomm-ui").directive("rtcommQueues",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-register.html",controller:b,controllerAs:"registerVM",bindToController:!0};return a}function b(a,b,c){var d=this;d.nextAction="Register",d.reguserid="",d.invalid=!1;var e=/(\$|#|\+|\/|\\)+/i;d.onRegClick=function(){"Register"!==d.nextAction||e.test(d.reguserid)?(c.debug("Unregister: reguserid ="+d.reguserid),a.unregister()):(c.debug("Register: reguserid ="+d.reguserid),a.register(d.reguserid))},b.$watch(function(){return d.reguserid},function(){d.reguserid.length<1||e.test(d.reguserid)?d.invalid=!0:d.invalid=!1}),b.$on("rtcomm::init",function(a,b,c){d.nextAction=b?"Unregister":"Register",b===!0?d.reguserid=c.userid:"destroyed"===c?d.reguserid="":d.reguserid="Init failed:"+c})}angular.module("angular-rtcomm-ui").directive("rtcommRegister",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-sessionmgr.html",controller:b,controllerAs:"sessionMgrVM",bindToController:!0};return a}function b(a,b,c){var d=this;d.sessions=a.getSessions(),d.sessMgrActiveEndpointUUID=a.getActiveEndpoint(),d.publishPresence=!1,d.sessionPresenceData=[],b.init=function(a){d.publishPresence=a,d.updatePresence()},d.activateSession=function(b){c.debug("rtcommSessionmgr: activateEndpoint ="+b),d.sessMgrActiveEndpointUUID!==b&&a.setActiveEndpoint(b)},d.updatePresence=function(){d.publishPresence===!0&&(a.removeFromPresenceRecord(d.sessionPresenceData,!1),d.sessionPresenceData=[{name:"sessions",value:String(d.sessions.length)}],a.addToPresenceRecord(d.sessionPresenceData))},b.$on("endpointActivated",function(a,b){c.debug("rtcommSessionmgr: endpointActivated ="+b),d.sessMgrActiveEndpointUUID=b}),b.$on("session:started",function(a,b){c.debug("rtcommSessionmgr: session:started: uuid ="+b.endpoint.id),d.updatePresence()})}angular.module("angular-rtcomm-ui").directive("rtcommSessionManager",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(a,b,c){b.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),b.epCtrlAVConnected=a.isWebrtcConnected(b.epCtrlActiveEndpointUUID),b.sessionState=a.getSessionState(b.epCtrlActiveEndpointUUID),b.disconnect=function(){c.debug("Disconnecting call for endpoint: "+b.epCtrlActiveEndpointUUID),a.getEndpoint(b.epCtrlActiveEndpointUUID).disconnect()},b.toggleAV=function(){c.debug("Enable AV for endpoint: "+b.epCtrlActiveEndpointUUID),0==b.epCtrlAVConnected?a.getEndpoint(b.epCtrlActiveEndpointUUID).webrtc.enable(function(b,d){b||(c.debug("Enable failed: ",d),a.alert({type:"danger",msg:d}))}):(c.debug("Disable AV for endpoint: "+b.epCtrlActiveEndpointUUID),a.getEndpoint(b.epCtrlActiveEndpointUUID).webrtc.disable())},b.$on("session:started",function(a,d){c.debug("session:started received: endpointID = "+d.endpoint.id),b.epCtrlActiveEndpointUUID==d.endpoint.id&&(b.sessionState="session:started")}),b.$on("session:stopped",function(a,d){c.debug("session:stopped received: endpointID = "+d.endpoint.id),b.epCtrlActiveEndpointUUID==d.endpoint.id&&(b.sessionState="session:stopped")}),b.$on("session:failed",function(a,d){c.debug("session:failed received: endpointID = "+d.endpoint.id),b.epCtrlActiveEndpointUUID==d.endpoint.id&&(b.sessionState="session:failed")}),b.$on("webrtc:connected",function(a,c){b.epCtrlActiveEndpointUUID==c.endpoint.id&&(b.epCtrlAVConnected=!0)}),b.$on("webrtc:disconnected",function(a,c){b.epCtrlActiveEndpointUUID==c.endpoint.id&&(b.epCtrlAVConnected=!1)}),b.$on("endpointActivated",function(c,d){b.epCtrlActiveEndpointUUID=d,b.epCtrlAVConnected=a.isWebrtcConnected(d)}),b.$on("noEndpointActivated",function(a){b.epCtrlAVConnected=!1})}angular.module("angular-rtcomm-ui").controller("RtcommEndpointController",a),a.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(a,c){function d(a,b,d,e){var f=angular.element(b.find(".panel-body")[0]),g=!0;e.scrollToBottom=function(b){g=b,a.bottom=b},f.length>0&&(f.bind("scroll",function(){f.prop("scrollTop")+f.prop("clientHeight")==f.prop("scrollHeight")?e.scrollToBottom(!0):e.scrollToBottom(!1)}),a.$watch(function(){return e.chats},function(){c.debug("rtcommChat - Link > $watch on chats called"),g&&f.scrollTop(f.prop("scrollHeight"))},!0))}var e={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-chat.html",link:d,controller:b,controllerAs:"chatVM",bindToController:!0};return e}function b(a,b,c){var d=this;d.chatActiveEndpointUUID=b.getActiveEndpoint(),d.chats=b.getChats(d.chatActiveEndpointUUID),d.keySendMessage=function(a){13===a.which&&d.sendMessage()},d.sendMessage=function(){c.debug("rtcommChat: sendMessage() -> "+d.message);var e={time:new Date,name:b.getEndpoint(d.chatActiveEndpointUUID).getLocalEndpointID(),message:angular.copy(d.message)};d.message="",d.scrollToBottom(!0),a.bottom=!0,b.sendChatMessage(e,d.chatActiveEndpointUUID)},a.$on("endpointActivated",function(a,e){c.debug("rtcommChat: endpointActivated ="+e),d.chats=b.getChats(e),d.chatActiveEndpointUUID=e}),a.$on("noEndpointActivated",function(a){d.chats=[],d.chatActiveEndpointUUID=null})}angular.module("angular-rtcomm-ui").directive("rtcommChat",a),a.$inject=["RtcommService","$log"],b.$inject=["$scope","RtcommService","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-endpoint-status.html",controller:b,controllerAs:"endpointStatusVM",bindToController:!0};return a}function b(a,b,c){var d=this;d.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),d.epCtrlRemoteEndpointID=a.getRemoteEndpoint(d.epCtrlActiveEndpointUUID),d.sessionState=a.getSessionState(d.epCtrlActiveEndpointUUID),d.failureReason="",d.queueCount=0,b.$on("session:started",function(a,b){c.debug("session:started received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID===b.endpoint.id&&(d.sessionState="session:started",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:stopped",function(a,b){c.debug("session:stopped received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:stopped",d.epCtrlRemoteEndpointID=null)}),b.$on("session:failed",function(a,b){c.debug("session:failed received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:failed",d.failureReason=b.reason,d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:alerting",function(a,b){c.debug("session:alerting received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID!=b.endpoint.id&&(d.sessionState="session:alerting",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:connecting",function(a,b){c.debug("session:connecting received: endpointID = "+b.endpoint.id),d.sessionState="session:connecting",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID()}),b.$on("session:queued",function(a,b){c.debug("session:queued received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:queued",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:trying",function(a,b){c.debug("session:trying received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:trying",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:ringing",function(a,b){c.debug("session:ringing received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:ringing",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("endpointActivated",function(b,c){d.epCtrlActiveEndpointUUID=c,d.epCtrlRemoteEndpointID=a.getEndpoint(c).getRemoteEndpointID(),d.sessionState=a.getSessionState(c)}),b.$on("noEndpointActivated",function(a){d.epCtrlRemoteEndpointID=null,d.sessionState="session:stopped"}),b.$on("rtcomm::init",function(b,c,e){c===!0&&(d.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),d.epCtrlRemoteEndpointID=a.getRemoteEndpoint(d.epCtrlActiveEndpointUUID),d.sessionState=a.getSessionState(d.epCtrlActiveEndpointUUID),d.failureReason=""),0==c&&(d.sessionState="session:stopped",d.epCtrlRemoteEndpointID=null)})}angular.module("angular-rtcomm-ui").directive("rtcommEndpointStatus",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-iframe.html",controller:b,controllerAs:"iframeVM",bindToController:!0};return a}function b(a,b,c,d,e,f){var g=this;g.iframeActiveEndpointUUID=a.getActiveEndpoint(),g.iframeURL=null,g.initiframeURL=null,g.syncSource=!1,e.init=function(a){a===!0&&(g.syncSource=!0,g.initiframeURL=c.absUrl())},g.setURL=function(c){f.debug("rtcommIframe: setURL: newURL: "+c),a.putIframeURL(g.iframeActiveEndpointUUID,c),g.iframeURL=b.trustAsResourceUrl(c)},g.forward=function(){},g.backward=function(){},e.$on("session:started",function(b,c){f.debug("session:started received: endpointID = "+c.endpoint.id),1==g.syncSource&&a.putIframeURL(c.endpoint.id,g.initiframeURL)}),e.$on("endpointActivated",function(c,d){f.debug("rtcommIframe: endpointActivated ="+d),0==g.syncSource&&(g.iframeURL=b.trustAsResourceUrl(a.getIframeURL(d)),g.iframeActiveEndpointUUID=d)}),e.$on("noEndpointActivated",function(a){0==g.syncSource&&(g.iframeURL=b.trustAsResourceUrl("about:blank"),g.iframeActiveEndpointUUID=null)}),e.$on("rtcomm::iframeUpdate",function(a,c,e){g.syncSource===!1?(f.debug("rtcomm::iframeUpdate: "+e),g.iframeURL=b.trustAsResourceUrl(e)):(f.debug("rtcomm::iframeUpdate: load this url in a new tab: "+e),d.open(b.trustAsResourceUrl(e),"_blank"))})}angular.module("angular-rtcomm-ui").directive("rtcommIframe",a),b.$inject=["RtcommService","$sce","$location","$window","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-video.html",controller:b,controllerAs:"videoVM",bindToController:!0};return a}function b(a,b,c){var d=this;c.debug("VideoController Starting"),d.avConnected=a.isWebrtcConnected(a.getActiveEndpoint()),b.avConnected=a.isWebrtcConnected(a.getActiveEndpoint()),b.init=function(b,c){a.setViewSelector(b,c);var d=a.getActiveEndpoint();"undefined"!=typeof d&&null!=d&&a.setVideoView(d)};var e=a.getActiveEndpoint();"undefined"!=typeof e&&null!=e&&a.setVideoView(e),b.$on("endpointActivated",function(e,f){c.debug("rtcommVideo: endpointActivated ="+f),a.setVideoView(f),d.avConnected=a.isWebrtcConnected(a.getActiveEndpoint()),b.avConnected=a.isWebrtcConnected(a.getActiveEndpoint())}),b.$on("noEndpointActivated",function(a){d.avConnected=!1,b.avConnected=!1}),b.$on("webrtc:connected",function(c,e){a.getActiveEndpoint()==e.endpoint.id&&(d.avConnected=!0,b.avConnected=!0)}),b.$on("webrtc:disconnected",function(c,e){a.getActiveEndpoint()==e.endpoint.id&&(d.avConnected=!1,b.avConnected=!1)})}angular.module("angular-rtcomm-ui").directive("rtcommVideo",a).controller("RtcommVideoController",b),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(a,b,c,d,e){var f=this;f.alertingEndpointUUID=null,f.autoAnswerNewMedia=!1,f.alertActiveEndpointUUID=a.getActiveEndpoint(),f.caller=null,f.showAlerting=function(d){var g=b.open({templateUrl:"templates/rtcomm/rtcomm-modal-alert.html",controller:"RtcommAlertModalInstanceController",size:d,backdrop:"static",resolve:{caller:function(){return f.caller}}});g.result.then(function(){var b=a.getEndpoint(f.alertingEndpointUUID);b&&(e.debug("Accepting call from: "+f.caller+" for endpoint: "+f.alertingEndpointUUID),b.accept(),c.$broadcast("rtcomm::alert-success"),b=null)},function(){var b=a.getEndpoint(f.alertingEndpointUUID);b&&(e.debug("Rejecting call from: "+f.caller+" for endpoint: "+f.alertingEndpointUUID),b.reject(),b=null)})},d.init=function(a){e.debug("rtcommAlert: autoAnswerNewMedia = "+a),f.autoAnswerNewMedia=a},d.$on("endpointActivated",function(a,b){f.alertActiveEndpointUUID=b}),d.$on("session:alerting",function(a,b){f.alertActiveEndpointUUID==b.endpoint.id&&0==f.autoAnswerNewMedia||f.alertActiveEndpointUUID!=b.endpoint.id?(e.debug("rtcommAlert: display alterting model: alertActiveEndpointUUID = "+b.endpoint+" autoAnswerNewMedia = "+f.autoAnswerNewMedia),f.caller=b.endpoint.getRemoteEndpointID(),f.alertingEndpointUUID=b.endpoint.id,f.showAlerting()):(e.debug("Accepting media from: "+b.endpoint.getRemoteEndpointID()+" for endpoint: "+b.endpoint.id),b.endpoint.accept())})}function b(a,b,c,d){a.caller=d,a.ok=function(){c.debug("Accepting alerting call"),b.close()},a.cancel=function(){c.debug("Rejecting alerting call"),b.dismiss("cancel")}}angular.module("angular-rtcomm-ui").controller("RtcommAlertModalController",a).controller("RtcommAlertModalInstanceController",b),a.$inject=["RtcommService","$uibModal","$rootScope","$scope","$log"],b.$inject=["$scope","$uibModalInstance","$log","caller"]}(),function(){"use strict";function a(a,b,c,d){var e=this;e.calleeID=null,e.callerID=null,e.enableCallModel=!1,e.mediaToEnable=["chat"],e.init=function(a,b){e.calleeID=a,"undefined"!=typeof b&&(e.mediaToEnable=b)},e.placeCall=function(c){var f=b.open({templateUrl:"templates/rtcomm/rtcomm-modal-call.html",controller:"RtcommCallModalInstanceController",size:c,resolve:{}});f.result.then(function(b){d.debug("rtcommCallModal: Calling calleeID: "+e.calleeID),d.debug("rtcommCallModal: CallerID: "+b),null==e.callerID&&"undefined"!=typeof b&&""!=b&&(e.callerID=b,a.setAlias(b)),a.placeCall(e.calleeID,e.mediaToEnable)},function(){d.info("Modal dismissed at: "+new Date)})},c.$on("rtcomm::init",function(a,b,c){d.debug("RtcommCallModalController: rtcomm::init: success = "+b),1==b?e.enableCallModel=!0:e.enableCallModel=!1}),c.$on("session:started",function(a,b){e.enableCallModel=!1}),c.$on("session:stopped",function(a,b){e.enableCallModel=!0})}function b(a,b,c){a.endpointAlias="",a.ok=function(){b.close(a.endpointAlias)},a.cancel=function(){b.dismiss("cancel")}}angular.module("angular-rtcomm-ui").controller("RtcommCallModalController",a).controller("RtcommCallModalInstanceController",b),a.$inject=["RtcommService","$uibModal","$scope","$log"],b.$inject=["$scope","$uibModalInstance","RtcommService"]}(),angular.module("angular-rtcomm-ui").run(["$templateCache",function(a){"use strict";a.put("templates/rtcomm/rtcomm-alert.html",'<div class="row"><uib-alert ng-repeat="alert in alertVM.alerts" type="{{alert.type}}" close="alertVM.closeAlert($index)">{{alert.msg}}</uib-alert></div>'),a.put("templates/rtcomm/rtcomm-chat.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-comment"></span> Chat</div><div class="panel-body"><ul class="chat"><li class="right clearfix" ng-repeat="chat in chatVM.chats"><div id="{{$index}}" class="header"><strong class="primary-font">{{chat.name}}</strong> <small class="pull-right text-muted">{{chat.time | date:\'HH:mm:ss\'}}</small></div><p>{{chat.message}}</p></li></ul></div><div class="panel-footer"><div class="input-group"><input id="chat-input" type="text" class="form-control input-sm" placeholder="Type your message here..." type="text" ng-model="chatVM.message" ng-keypress="chatVM.keySendMessage($event)"> <span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-chat" ng-click="chatVM.sendMessage()" focusinput="true" ng-disabled="(chatVM.chatActiveEndpointUUID == null)">Send</button></span></div></div></div></div><!-- chat list ng-controller div -->'),
a.put("templates/rtcomm/rtcomm-endpoint-status.html",'<div class="endpoint-status"><p class="endpoint-controls-title navbar-text pull-right" ng-switch on="endpointStatusVM.sessionState"><span ng-switch-when="session:started">Connected to {{endpointStatusVM.epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:stopped">No active sessions, waiting...</span> <span ng-switch-when="session:alerting">Inbound call from {{endpointStatusVM.epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:trying">Attempting to call {{endpointStatusVM.epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:ringing">Call to {{endpointStatusVM.epCtrlRemoteEndpointID}} is ringing</span> <span ng-switch-when="session:queued">Waiting in queue at: {{endpointStatusVM.queueCount}}</span> <span ng-switch-when="session:failed">Call failed with reason: {{endpointStatusVM.failureReason}}</span> <span ng-switch-when="session:connecting">Connecting to {{endpointStatusVM.epCtrlRemoteEndpointID}} ...</span></p></div>'),a.put("templates/rtcomm/rtcomm-iframe.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-link"></span> URL Sharing</div><div class="rtcomm-iframe"><iframe width="100%" height="100%" ng-src="{{iframeVM.iframeURL}}"></iframe></div><div class="row"><div class="col-lg-2"><button id="btnBackward" class="btn btn-primary" ng-click="iframeVM.backward()" focusinput="true" ng-disabled="(iframeVM.iframeUrl == null)"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true" aria-label="Backward"></span> Backward</button></div><div class="col-lg-2"><button id="btnForward" class="btn btn-primary" ng-click="iframeVM.forward()" ng-disabled="(iframeVM.iframeUrl == null)"><span class="glyphicon glyphicon-arrow-right" aria-hidden="true" aria-label="Forward"></span> Forward</button></div><div class="col-lg-8"><div class="input-group"><input id="setUrl" type="text" class="form-control" type="text" ng-model="iframeVM.newUrl"><span class="input-group-btn"><button class="btn btn-primary" id="btn-send-url" ng-click="iframeVM.setURL(iframeVM.newUrl)" focusinput="true">Set URL</button></span></div><!-- /input-group --></div></div></div></div>'),a.put("templates/rtcomm/rtcomm-modal-alert.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">New call alert</h4></div><div class="modal-body"><p>Do you want to accept a call from {{caller}}.</p></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Yes</button> <button type="button" ng-click="cancel()" class="btn btn-primary" data-dismiss="modal">No</button></div>'),a.put("templates/rtcomm/rtcomm-modal-call.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">Get Help</h4></div><div class="modal-body"><p>To help us serve you better, please provide some information before we begin.</p><form class="form-horizontal" role="form"><div class="form-group"><label for="name" class="col-sm-2 control-label">Name</label><div class="col-sm-10"><input type="text" class="form-control" id="name" placeholder="Your Name" ng-model="endpointAlias"></div></div></form></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Connect</button> <button type="button" ng-click="cancel()" class="btn btn-default" data-dismiss="modal">Cancel</button></div>'),a.put("templates/rtcomm/rtcomm-queues.html",'<div><div class="panel panel-primary"><div class="panel-heading"><span class="glyphicon glyphicon-sort-by-attributes-alt"></span> Queues</div><div class="queueContainer"><button type="button" ng-class="{\'btn btn-primary btn-default btn-block\': queue.active, \'btn btn-default btn-default btn-block\': !queue.active}" ng-repeat="queue in queuesVM.rQueues" ng-click="queuesVM.onQueueClick(queue)" data-toggle="tooltip" data-placement="top" title="{{queue.description}}">{{queue.active ? \'Leave\' : \'Join\'}} {{queue.endpointID}}</button></div></div></div>'),a.put("templates/rtcomm/rtcomm-register.html",'<div><div class="panel panel-primary"><div class="input-group"><input id="register-input" type="text" class="form-control input-sm" placeholder="Enter your ID here..." type="text" ng-model="registerVM.reguserid" ng-disabled="(registerVM.nextAction==\'Unregister\')"><span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-register" ng-click="registerVM.onRegClick(registerVM.reguserid)" ng-disabled="registerVM.invalid" focusinput="true">{{registerVM.nextAction}}</button></span></div></div></div>'),a.put("templates/rtcomm/rtcomm-sessionmgr.html",'<div class="session-manager"><div class="btn-group pull-left" style="padding: 10px"><div><button class="session-manager-button" type="button" ng-switch on="session.activated" ng-class="{\'btn btn-primary btn-sm\': session.activated, \'btn btn-default btn-sm\': !session.activated}" ng-repeat="session in sessionMgrVM.sessions" ng-click="sessionMgrVM.activateSession(session.endpointUUID)"><span class="glyphicon glyphicon-eye-open" aria-hidden="true" ng-switch-when="true"></span> <span class="glyphicon glyphicon-eye-close" aria-hidden="true" ng-switch-when="false"></span> {{session.remoteEndpointID}}</button></div></div><p class="session-manager-title navbar-text pull-right">Sessions</p></div>'),a.put("templates/rtcomm/rtcomm-video.html",'<div id="videoContainer"><div id="selfViewContainer"><video title="selfView" id="selfView" class="selfView" autoplay muted></video></div><video title="remoteView" id="remoteView" class="remoteView" autoplay></video><!-- video title="remoteView" id="remoteView" class="remoteView" autoplay="true" poster="../views/rtcomm/images/video_camera_big.png"></video --></div>')}]),angular.module("angular-rtcomm-presence").run(["$templateCache",function(a){"use strict";a.put("templates/rtcomm/rtcomm-presence.html",'<div treecontrol class="tree-light" tree-model="presenceData" options="treeOptions" on-selection="showSelected(node)" expanded-nodes="expandedNodes"><button type="button" class="btn btn-primary btn-xs" aria-label="Left Align" ng-show="(node.record && !node.self)" ng-click="onCallClick(node.name)"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true" aria-label="expand record"></span></button> {{node.name}} {{node.value ? \': \' + node.value : \'\'}}</div>')}]);